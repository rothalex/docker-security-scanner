image: docker:stable

services:
  - docker:stable-dind

# a private docker registry is used. You won't be able to pull or push
variables:
  CI_APPLICATION_REPOSITORY: "apmregistry.azurecr.io"
  CI_APPLICATION_NAME: "tomcat-security-scanned"
  CI_DOCKER_IMAGE_NAME: ${CI_APPLICATION_REPOSITORY}/${CI_APPLICATION_NAME}:$CI_COMMIT_SHA

# Use the most common stages to demonstrate a full build and deploy (to registry)
stages:
  - build
  - test
  - deploy

## Build a docker container and pass it to the next stage
build:
  stage: build
  script:
    - docker build -t ${CI_DOCKER_IMAGE_NAME} . 
    - mkdir image_cache
    - docker save ${CI_DOCKER_IMAGE_NAME} > image_cache/cached_image.tar    
  artifacts:
    paths:
      - image_cache

# Perform security scan with clair
clair_scanning:
  stage: test
  script:
    - docker load -i image_cache/cached_image.tar
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.1
    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
    - retries=0
    - echo "Waiting for clair daemon to start"
    - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
    - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log ${CI_DOCKER_IMAGE_NAME} --reportAll=true
  artifacts:    
    paths: [gl-container-scanning-report.json, image_cache]

# Perform a security scan with aquasec microscanner
aqua_scan:
  stage: test
  script:
    - docker load -i image_cache/cached_image.tar
    - apk add git bash --no-cache 
    - git clone https://github.com/lukebond/microscanner-wrapper.git aquasec
    - chmod +x aquasec/scan.sh
    - bash scan.sh

# Deploy to registry
container_deploy:
  stage: deploy
  script:
    - docker load -i image_cache/cached_image.tar
    - docker login apmregistry.azurecr.io -u ${REGISTRY_USER} -p ${REGISTRY_TOKEN}    
    - docker push ${CI_DOCKER_IMAGE_NAME} 